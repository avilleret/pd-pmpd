name: Build Pure-Data externals

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PD_VERSION: 0.51-4

jobs:
      
  build_ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Clone Pure-Data
      run: git clone --branch=${PD_VERSION} --depth=1 https://github.com/pure-data/pure-data.git
    
    - name: Install Dependencies
      run: |
        sudo apt-get install -yqq ninja-build cmake
    
    - name: Build
      run: |
        cmake -S . -B build -G Ninja
        cmake --build build
        cmake --build build --target install

    - name: Archive Package
      uses: actions/upload-artifact@v2
      with:
        name: pmpd
        path: package/pmpd
    
  build_macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Clone Pure-Data
      run: git clone --branch=${PD_VERSION} --depth=1 https://github.com/pure-data/pure-data.git

    - name: Install Dependencies
      run: |
        brew install ninja cmake

    - name: Build
      run: |
        cmake -S . -B build -G Ninja
        cmake --build build
        cmake --build build --target install  
   
    - name: Archive Package
      uses: actions/upload-artifact@v2
      with:
        name: pmpd
        path: package/pmpd

  build_windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Download Pure-Data Binaries
      run: |
        Invoke-WebRequest -Uri "http://msp.ucsd.edu/Software/pd-${env:PD_VERSION}.msw.zip" pd-${env:PD_VERSION}.msw.zip
        ExpandArchive -Path pd-${env:PD_VERSION}.msw.zip -DestinationPath .

    - name: Build
      run: |
        cmake -S . -B build -DPUREDATA_INCLUDE_DIRS="pd-${env:PD_VERSION}/src" -DPUREDATA_LIB="pd-${env:PD_VERSION}/bin/pd.lib"
        cmake --build build
        cmake --build build --target install

    - name: Archive Package
      uses: actions/upload-artifact@v2
      with:
        name: pmpd
        path: package/pmpd
        
  package_release:
    runs-on: ubuntu-latest
    needs: [ build_ubuntu, build_macos, build_windows ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: pmpd
          path: pmpd
      - name: Rezip
        shell: bash
        run: |
          ls
          SHORT=${GITHUB_REF:11} # remove the 'refs/tags/' prefix
          SLUG=${SHORT//\//_} # replace '/' with '_'
          zip -r pmpd-${SLUG}.zip pmpd
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: pmpd*.zip